[
  {
    "line": 2,
    "elements": [
      {
        "line": 4,
        "name": "",
        "description": "",
        "type": "background",
        "keyword": "Background",
        "steps": []
      },
      {
        "before": [
          {
            "result": {
              "duration": 2558590800,
              "status": "passed"
            },
            "match": {
              "location": "Hooks.openBrowser()"
            }
          }
        ],
        "line": 78,
        "name": "Verify to Create Back Order Archival folder for Current month Archival",
        "description": "",
        "id": "vendor-master-data-covers-the-raise-request-and-process-the-request-to-complete.;verify-to-create-back-order-archival-folder-for-current-month-archival",
        "after": [
          {
            "output": [
              "Current Page URL is http://tc3-v-devsp05/sites/NPSFinance/Lists/RFPAPVendor/AllItems.aspx?web\u003d1"
            ],
            "embeddings": [
              {
                "data": "\u003d\u003d",
                "mime_type": "image/png"
              }
            ],
            "result": {
              "duration": 1608492800,
              "status": "passed"
            },
            "match": {
              "location": "Hooks.embedScreenshot(Scenario)"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 14262683500,
              "status": "passed"
            },
            "line": 79,
            "name": "I have logged in full permission user model AdminRights",
            "match": {
              "arguments": [
                {
                  "val": " AdminRights",
                  "offset": 43
                }
              ],
              "location": "Generic_Steps.iHaveLoggedInFullPermissionUserModel(String)"
            },
            "keyword": "Given "
          },
          {
            "result": {
              "duration": 13186116500,
              "status": "passed"
            },
            "line": 80,
            "name": "I click on AP Vendor menu from side bar option",
            "match": {
              "location": "Generic_Steps.iClickOnAPVendorFromSideBarOption()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 21160794500,
              "status": "passed"
            },
            "line": 81,
            "name": "I click on AP Vendor",
            "match": {
              "location": "Generic_Steps.iClickOnAPVendor()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 1074814400,
              "status": "passed"
            },
            "line": 82,
            "name": "I click on Create button for creating new request",
            "match": {
              "location": "Generic_Steps.iClickOnNewPlusIconButtonAndCreatingTheFolderForArchival()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 43480094700,
              "status": "passed"
            },
            "line": 83,
            "name": "I have to raise the AP Vendor request",
            "match": {
              "location": "Generic_Steps.setRaiseAPVendorRequest()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "duration": 20215320700,
              "status": "passed"
            },
            "line": 84,
            "name": "I click on the the Save Button",
            "match": {
              "location": "Generic_Steps.iClickTheOnTheSaveButton()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "error_message": "org.openqa.selenium.TimeoutException: Expected condition failed: waiting for visibility of Proxy element for: DefaultElementLocator \u0027By.xpath: //span[@class\u003d\u0027ms-DetailsHeader-cellName\u0027]\u0027 (tried for 60 second(s) with 500 milliseconds interval)\r\n\tat org.openqa.selenium.support.ui.WebDriverWait.timeoutException(WebDriverWait.java:82)\r\n\tat org.openqa.selenium.support.ui.FluentWait.until(FluentWait.java:272)\r\n\tat pageobjects.PropertiesPageObject.VerifyRecordApprovalTypeAPVendor(PropertiesPageObject.java:390)\r\n\tat step_definitions.Generic_Steps.verifyTheRespectiveRecordsForAPVendor(Generic_Steps.java:351)\r\n\tat ✽.Verify the respective Records for AP Vendor current status should be Validation(C:/GitProject/NPSFinanceApplication/NPSFinanceApplication/src/test/resources/features/VendorMasterData.feature:85)\r\nCaused by: org.openqa.selenium.NoSuchElementException: no such element: Unable to locate element: {\"method\":\"xpath\",\"selector\":\"//span[@class\u003d\u0027ms-DetailsHeader-cellName\u0027]\"}\n  (Session info: chrome\u003d96.0.4664.45)\nFor documentation on this error, please visit: http://seleniumhq.org/exceptions/no_such_element.html\nBuild info: version: \u00273.10.0\u0027, revision: \u0027176b4a9\u0027, time: \u00272018-03-02T19:03:16.397Z\u0027\nSystem info: host: \u0027UK-V-JENK-01\u0027, ip: \u002710.102.80.159\u0027, os.name: \u0027Windows Server 2016\u0027, os.arch: \u0027amd64\u0027, os.version: \u002710.0\u0027, java.version: \u002711.0.4\u0027\nDriver info: org.openqa.selenium.chrome.ChromeDriver\nCapabilities {acceptInsecureCerts: false, browserName: chrome, browserVersion: 96.0.4664.45, chrome: {chromedriverVersion: 95.0.4638.54 (d31a821ec901f..., userDataDir: C:\\Users\\PARMES~1.GLO\\AppDa...}, goog:chromeOptions: {debuggerAddress: localhost:63482}, javascriptEnabled: true, networkConnectionEnabled: false, pageLoadStrategy: normal, platform: WINDOWS, platformName: WINDOWS, proxy: Proxy(), setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: dismiss and notify, webauthn:extension:credBlob: true, webauthn:extension:largeBlob: true, webauthn:virtualAuthenticators: true}\nSession ID: 39cb6422bd96790f5b31b8bccc1c47a8\n*** Element info: {Using\u003dxpath, value\u003d//span[@class\u003d\u0027ms-DetailsHeader-cellName\u0027]}\r\n\tat jdk.internal.reflect.GeneratedConstructorAccessor12.newInstance(Unknown Source)\r\n\tat java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)\r\n\tat java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:490)\r\n\tat org.openqa.selenium.remote.http.W3CHttpResponseCodec.createException(W3CHttpResponseCodec.java:187)\r\n\tat org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:122)\r\n\tat org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:49)\r\n\tat org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:160)\r\n\tat org.openqa.selenium.remote.service.DriverCommandExecutor.execute(DriverCommandExecutor.java:83)\r\n\tat org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:601)\r\n\tat org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:371)\r\n\tat org.openqa.selenium.remote.RemoteWebDriver.findElementByXPath(RemoteWebDriver.java:473)\r\n\tat org.openqa.selenium.By$ByXPath.findElement(By.java:361)\r\n\tat org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:363)\r\n\tat org.openqa.selenium.support.pagefactory.DefaultElementLocator.findElement(DefaultElementLocator.java:69)\r\n\tat org.openqa.selenium.support.pagefactory.internal.LocatingElementHandler.invoke(LocatingElementHandler.java:38)\r\n\tat com.sun.proxy.$Proxy21.isDisplayed(Unknown Source)\r\n\tat org.openqa.selenium.support.ui.ExpectedConditions.elementIfVisible(ExpectedConditions.java:315)\r\n\tat org.openqa.selenium.support.ui.ExpectedConditions.access$100(ExpectedConditions.java:44)\r\n\tat org.openqa.selenium.support.ui.ExpectedConditions$10.apply(ExpectedConditions.java:301)\r\n\tat org.openqa.selenium.support.ui.ExpectedConditions$10.apply(ExpectedConditions.java:298)\r\n\tat org.openqa.selenium.support.ui.FluentWait.until(FluentWait.java:249)\r\n\tat pageobjects.PropertiesPageObject.VerifyRecordApprovalTypeAPVendor(PropertiesPageObject.java:390)\r\n\tat step_definitions.Generic_Steps.verifyTheRespectiveRecordsForAPVendor(Generic_Steps.java:351)\r\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\r\n\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\r\n\tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\r\n\tat java.base/java.lang.reflect.Method.invoke(Method.java:566)\r\n\tat cucumber.runtime.Utils$1.call(Utils.java:32)\r\n\tat cucumber.runtime.Timeout.timeout(Timeout.java:16)\r\n\tat cucumber.runtime.Utils.invoke(Utils.java:26)\r\n\tat cucumber.runtime.java.JavaStepDefinition.execute(JavaStepDefinition.java:37)\r\n\tat cucumber.runtime.StepDefinitionMatch.runStep(StepDefinitionMatch.java:40)\r\n\tat cucumber.api.TestStep.executeStep(TestStep.java:102)\r\n\tat cucumber.api.TestStep.run(TestStep.java:83)\r\n\tat cucumber.api.TestCase.run(TestCase.java:58)\r\n\tat cucumber.runner.Runner.runPickle(Runner.java:80)\r\n\tat cucumber.runtime.junit.PickleRunners$NoStepDescriptions.run(PickleRunners.java:140)\r\n\tat cucumber.runtime.junit.FeatureRunner.runChild(FeatureRunner.java:68)\r\n\tat cucumber.runtime.junit.FeatureRunner.runChild(FeatureRunner.java:23)\r\n\tat org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)\r\n\tat org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)\r\n\tat org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)\r\n\tat org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)\r\n\tat org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)\r\n\tat org.junit.runners.ParentRunner.run(ParentRunner.java:363)\r\n\tat cucumber.runtime.junit.FeatureRunner.run(FeatureRunner.java:73)\r\n\tat cucumber.api.junit.Cucumber.runChild(Cucumber.java:117)\r\n\tat cucumber.api.junit.Cucumber.runChild(Cucumber.java:55)\r\n\tat org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)\r\n\tat org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)\r\n\tat org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)\r\n\tat org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)\r\n\tat org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)\r\n\tat cucumber.api.junit.Cucumber$1.evaluate(Cucumber.java:126)\r\n\tat org.junit.internal.runners.statements.RunAfters.evaluate(RunAfters.java:27)\r\n\tat org.junit.runners.ParentRunner.run(ParentRunner.java:363)\r\n\tat org.junit.runners.Suite.runChild(Suite.java:128)\r\n\tat org.junit.runners.Suite.runChild(Suite.java:27)\r\n\tat org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)\r\n\tat org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)\r\n\tat org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)\r\n\tat org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)\r\n\tat org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)\r\n\tat org.junit.runners.ParentRunner.run(ParentRunner.java:363)\r\n\tat org.apache.maven.surefire.junitcore.JUnitCore.run(JUnitCore.java:55)\r\n\tat org.apache.maven.surefire.junitcore.JUnitCoreWrapper.createRequestAndRun(JUnitCoreWrapper.java:137)\r\n\tat org.apache.maven.surefire.junitcore.JUnitCoreWrapper.executeEager(JUnitCoreWrapper.java:107)\r\n\tat org.apache.maven.surefire.junitcore.JUnitCoreWrapper.execute(JUnitCoreWrapper.java:83)\r\n\tat org.apache.maven.surefire.junitcore.JUnitCoreWrapper.execute(JUnitCoreWrapper.java:75)\r\n\tat org.apache.maven.surefire.junitcore.JUnitCoreProvider.invoke(JUnitCoreProvider.java:157)\r\n\tat org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:386)\r\n\tat org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:323)\r\n\tat org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:143)\r\n",
              "duration": 65342803100,
              "status": "failed"
            },
            "line": 85,
            "name": "Verify the respective Records for AP Vendor current status should be Validation",
            "match": {
              "arguments": [
                {
                  "val": "Validation",
                  "offset": 69
                }
              ],
              "location": "Generic_Steps.verifyTheRespectiveRecordsForAPVendor(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 86,
            "name": "I click on Respective Records and click on edit button for approver requires",
            "match": {
              "location": "Generic_Steps.iClickOnRespectiveRecordsAndClickOnEditButtonForApproverRequires()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 87,
            "name": "Verify the Request Status of raise request Validation",
            "match": {
              "arguments": [
                {
                  "val": "Validation",
                  "offset": 43
                }
              ],
              "location": "Generic_Steps.verifyRequestStatus(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 88,
            "name": "Select the current status of raise request Additional Information required - Treasury",
            "match": {
              "arguments": [
                {
                  "val": "Additional Information required - Treasury",
                  "offset": 43
                }
              ],
              "location": "Generic_Steps.currntStatus(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 89,
            "name": "I click on the the Save Button",
            "match": {
              "location": "Generic_Steps.iClickTheOnTheSaveButton()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 90,
            "name": "Verify the respective Records for AP Vendor current status should be Additional Information required - Treasury",
            "match": {
              "arguments": [
                {
                  "val": "Additional Information required - Treasury",
                  "offset": 69
                }
              ],
              "location": "Generic_Steps.verifyTheRespectiveRecordsForAPVendor(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 91,
            "name": "I click on Respective Records and click on edit button for approver requires",
            "match": {
              "location": "Generic_Steps.iClickOnRespectiveRecordsAndClickOnEditButtonForApproverRequires()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 92,
            "name": "Verify the Request Status of raise request Additional Information required - Treasury",
            "match": {
              "arguments": [
                {
                  "val": "Additional Information required - Treasury",
                  "offset": 43
                }
              ],
              "location": "Generic_Steps.verifyRequestStatus(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 93,
            "name": "Select the current status of raise request Additional information provided - Treasury",
            "match": {
              "arguments": [
                {
                  "val": "Additional information provided - Treasury",
                  "offset": 43
                }
              ],
              "location": "Generic_Steps.currntStatus(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 94,
            "name": "I click on the the Save Button",
            "match": {
              "location": "Generic_Steps.iClickTheOnTheSaveButton()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 95,
            "name": "Verify the respective Records for AP Vendor current status should be Additional information provided - Treasury",
            "match": {
              "arguments": [
                {
                  "val": "Additional information provided - Treasury",
                  "offset": 69
                }
              ],
              "location": "Generic_Steps.verifyTheRespectiveRecordsForAPVendor(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 96,
            "name": "I click on Respective Records and click on edit button for approver requires",
            "match": {
              "location": "Generic_Steps.iClickOnRespectiveRecordsAndClickOnEditButtonForApproverRequires()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 97,
            "name": "Verify the Request Status of raise request Additional information provided - Treasury",
            "match": {
              "arguments": [
                {
                  "val": "Additional information provided - Treasury",
                  "offset": 43
                }
              ],
              "location": "Generic_Steps.verifyRequestStatus(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 98,
            "name": "Select the current status of raise request B Signatory - Required",
            "match": {
              "arguments": [
                {
                  "val": "B Signatory - Required",
                  "offset": 43
                }
              ],
              "location": "Generic_Steps.currntStatus(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 99,
            "name": "I click on the the Save Button",
            "match": {
              "location": "Generic_Steps.iClickTheOnTheSaveButton()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 100,
            "name": "Verify the respective Records for AP Vendor current status should be B Signatory - Required",
            "match": {
              "arguments": [
                {
                  "val": "B Signatory - Required",
                  "offset": 69
                }
              ],
              "location": "Generic_Steps.verifyTheRespectiveRecordsForAPVendor(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 101,
            "name": "I click on Respective Records and click on edit button for approver requires",
            "match": {
              "location": "Generic_Steps.iClickOnRespectiveRecordsAndClickOnEditButtonForApproverRequires()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 102,
            "name": "Verify the Request Status of raise request B Signatory - Required",
            "match": {
              "arguments": [
                {
                  "val": "B Signatory - Required",
                  "offset": 43
                }
              ],
              "location": "Generic_Steps.verifyRequestStatus(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 103,
            "name": "Select the current status of raise request B Signatory - Awaiting Information",
            "match": {
              "arguments": [
                {
                  "val": "B Signatory - Awaiting Information",
                  "offset": 43
                }
              ],
              "location": "Generic_Steps.currntStatus(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 104,
            "name": "I click on the the Save Button",
            "match": {
              "location": "Generic_Steps.iClickTheOnTheSaveButton()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 105,
            "name": "Verify the respective Records for AP Vendor current status should be B Signatory - Awaiting Information",
            "match": {
              "arguments": [
                {
                  "val": "B Signatory - Awaiting Information",
                  "offset": 69
                }
              ],
              "location": "Generic_Steps.verifyTheRespectiveRecordsForAPVendor(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 106,
            "name": "I click on Respective Records and click on edit button for approver requires",
            "match": {
              "location": "Generic_Steps.iClickOnRespectiveRecordsAndClickOnEditButtonForApproverRequires()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 107,
            "name": "Verify the Request Status of raise request B Signatory - Awaiting Information",
            "match": {
              "arguments": [
                {
                  "val": "B Signatory - Awaiting Information",
                  "offset": 43
                }
              ],
              "location": "Generic_Steps.verifyRequestStatus(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 108,
            "name": "Select the current status of raise request Information Attached for B signatory",
            "match": {
              "arguments": [
                {
                  "val": "Information Attached for B signatory",
                  "offset": 43
                }
              ],
              "location": "Generic_Steps.currntStatus(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 109,
            "name": "I click on the the Save Button",
            "match": {
              "location": "Generic_Steps.iClickTheOnTheSaveButton()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 110,
            "name": "Verify the respective Records for AP Vendor current status should be Information Attached for B signatory",
            "match": {
              "arguments": [
                {
                  "val": "Information Attached for B signatory",
                  "offset": 69
                }
              ],
              "location": "Generic_Steps.verifyTheRespectiveRecordsForAPVendor(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 111,
            "name": "I click on Respective Records and click on edit button for approver requires",
            "match": {
              "location": "Generic_Steps.iClickOnRespectiveRecordsAndClickOnEditButtonForApproverRequires()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 112,
            "name": "Verify the Request Status of raise request Information Attached for B signatory",
            "match": {
              "arguments": [
                {
                  "val": "Information Attached for B signatory",
                  "offset": 43
                }
              ],
              "location": "Generic_Steps.verifyRequestStatus(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 113,
            "name": "Select the current status of raise request B Signatory approved - A Signatory required",
            "match": {
              "arguments": [
                {
                  "val": "B Signatory approved - A Signatory required",
                  "offset": 43
                }
              ],
              "location": "Generic_Steps.currntStatus(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 114,
            "name": "I click on the the Save Button",
            "match": {
              "location": "Generic_Steps.iClickTheOnTheSaveButton()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 115,
            "name": "Verify the respective Records for AP Vendor current status should be B Signatory approved - A Signatory required",
            "match": {
              "arguments": [
                {
                  "val": "B Signatory approved - A Signatory required",
                  "offset": 69
                }
              ],
              "location": "Generic_Steps.verifyTheRespectiveRecordsForAPVendor(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 116,
            "name": "I click on Respective Records and click on edit button for approver requires",
            "match": {
              "location": "Generic_Steps.iClickOnRespectiveRecordsAndClickOnEditButtonForApproverRequires()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 117,
            "name": "Verify the Request Status of raise request B Signatory approved - A Signatory required",
            "match": {
              "arguments": [
                {
                  "val": "B Signatory approved - A Signatory required",
                  "offset": 43
                }
              ],
              "location": "Generic_Steps.verifyRequestStatus(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 118,
            "name": "Select the current status of raise request A Signatory - Awaiting Information",
            "match": {
              "arguments": [
                {
                  "val": "A Signatory - Awaiting Information",
                  "offset": 43
                }
              ],
              "location": "Generic_Steps.currntStatus(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 119,
            "name": "I click on the the Save Button",
            "match": {
              "location": "Generic_Steps.iClickTheOnTheSaveButton()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 120,
            "name": "Verify the respective Records for AP Vendor current status should be A Signatory - Awaiting Information",
            "match": {
              "arguments": [
                {
                  "val": "A Signatory - Awaiting Information",
                  "offset": 69
                }
              ],
              "location": "Generic_Steps.verifyTheRespectiveRecordsForAPVendor(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 121,
            "name": "I click on Respective Records and click on edit button for approver requires",
            "match": {
              "location": "Generic_Steps.iClickOnRespectiveRecordsAndClickOnEditButtonForApproverRequires()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 122,
            "name": "Verify the Request Status of raise request A Signatory - Awaiting Information",
            "match": {
              "arguments": [
                {
                  "val": "A Signatory - Awaiting Information",
                  "offset": 43
                }
              ],
              "location": "Generic_Steps.verifyRequestStatus(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 123,
            "name": "Select the current status of raise request Information Attached for A signatory",
            "match": {
              "arguments": [
                {
                  "val": "Information Attached for A signatory",
                  "offset": 43
                }
              ],
              "location": "Generic_Steps.currntStatus(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 124,
            "name": "I click on the the Save Button",
            "match": {
              "location": "Generic_Steps.iClickTheOnTheSaveButton()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 125,
            "name": "Verify the respective Records for AP Vendor current status should be Information Attached for A signatory",
            "match": {
              "arguments": [
                {
                  "val": "Information Attached for A signatory",
                  "offset": 69
                }
              ],
              "location": "Generic_Steps.verifyTheRespectiveRecordsForAPVendor(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 126,
            "name": "I click on Respective Records and click on edit button for approver requires",
            "match": {
              "location": "Generic_Steps.iClickOnRespectiveRecordsAndClickOnEditButtonForApproverRequires()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 127,
            "name": "Verify the Request Status of raise request Information Attached for A signatory",
            "match": {
              "arguments": [
                {
                  "val": "Information Attached for A signatory",
                  "offset": 43
                }
              ],
              "location": "Generic_Steps.verifyRequestStatus(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 128,
            "name": "Select the current status of raise request A Signatory - Approved",
            "match": {
              "arguments": [
                {
                  "val": "A Signatory - Approved",
                  "offset": 43
                }
              ],
              "location": "Generic_Steps.currntStatus(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 129,
            "name": "I click on the the Save Button",
            "match": {
              "location": "Generic_Steps.iClickTheOnTheSaveButton()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 130,
            "name": "Verify the respective Records for AP Vendor current status should be A Signatory - Approved",
            "match": {
              "arguments": [
                {
                  "val": "A Signatory - Approved",
                  "offset": 69
                }
              ],
              "location": "Generic_Steps.verifyTheRespectiveRecordsForAPVendor(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 131,
            "name": "I click on Respective Records and click on edit button for approver requires",
            "match": {
              "location": "Generic_Steps.iClickOnRespectiveRecordsAndClickOnEditButtonForApproverRequires()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 132,
            "name": "Verify the Request Status of raise request A Signatory - Approved",
            "match": {
              "arguments": [
                {
                  "val": "A Signatory - Approved",
                  "offset": 43
                }
              ],
              "location": "Generic_Steps.verifyRequestStatus(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 133,
            "name": "Select the current status of raise request Payment processed",
            "match": {
              "arguments": [
                {
                  "val": "Payment processed",
                  "offset": 43
                }
              ],
              "location": "Generic_Steps.currntStatus(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 134,
            "name": "I click on the the Save Button",
            "match": {
              "location": "Generic_Steps.iClickTheOnTheSaveButton()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 135,
            "name": "Verify the respective Records for AP Vendor current status should be Payment processed",
            "match": {
              "arguments": [
                {
                  "val": "Payment processed",
                  "offset": 69
                }
              ],
              "location": "Generic_Steps.verifyTheRespectiveRecordsForAPVendor(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 136,
            "name": "I click on Respective Records and click on edit button for approver requires",
            "match": {
              "location": "Generic_Steps.iClickOnRespectiveRecordsAndClickOnEditButtonForApproverRequires()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 137,
            "name": "Verify the Request Status of raise request Payment processed",
            "match": {
              "arguments": [
                {
                  "val": "Payment processed",
                  "offset": 43
                }
              ],
              "location": "Generic_Steps.verifyRequestStatus(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 138,
            "name": "Select the current status of raise request Payment Released (1) - Banking Confirmation",
            "match": {
              "arguments": [
                {
                  "val": "Payment Released (1) - Banking Confirmation",
                  "offset": 43
                }
              ],
              "location": "Generic_Steps.currntStatus(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 139,
            "name": "I click on the the Save Button",
            "match": {
              "location": "Generic_Steps.iClickTheOnTheSaveButton()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 140,
            "name": "Verify the respective Records for AP Vendor current status should be Payment Released (1) - Banking Confirmation",
            "match": {
              "arguments": [
                {
                  "val": "Payment Released (1) - Banking Confirmation",
                  "offset": 69
                }
              ],
              "location": "Generic_Steps.verifyTheRespectiveRecordsForAPVendor(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 141,
            "name": "I click on Respective Records and click on edit button for approver requires",
            "match": {
              "location": "Generic_Steps.iClickOnRespectiveRecordsAndClickOnEditButtonForApproverRequires()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 142,
            "name": "Verify the Request Status of raise request Payment Released (1) - Banking Confirmation",
            "match": {
              "arguments": [
                {
                  "val": "Payment Released (1) - Banking Confirmation",
                  "offset": 43
                }
              ],
              "location": "Generic_Steps.verifyRequestStatus(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 143,
            "name": "Select the current status of raise request AP Post and allocate",
            "match": {
              "arguments": [
                {
                  "val": "AP Post and allocate",
                  "offset": 43
                }
              ],
              "location": "Generic_Steps.currntStatus(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 144,
            "name": "I click on the the Save Button",
            "match": {
              "location": "Generic_Steps.iClickTheOnTheSaveButton()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 145,
            "name": "Verify the respective Records for AP Vendor current status should be AP Post and allocate",
            "match": {
              "arguments": [
                {
                  "val": "AP Post and allocate",
                  "offset": 69
                }
              ],
              "location": "Generic_Steps.verifyTheRespectiveRecordsForAPVendor(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 146,
            "name": "I click on Respective Records and click on edit button for approver requires",
            "match": {
              "location": "Generic_Steps.iClickOnRespectiveRecordsAndClickOnEditButtonForApproverRequires()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 147,
            "name": "Verify the Request Status of raise request AP Post and allocate",
            "match": {
              "arguments": [
                {
                  "val": "AP Post and allocate",
                  "offset": 43
                }
              ],
              "location": "Generic_Steps.verifyRequestStatus(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 148,
            "name": "Select the current status of raise request Payment complete",
            "match": {
              "arguments": [
                {
                  "val": "Payment complete",
                  "offset": 43
                }
              ],
              "location": "Generic_Steps.currntStatus(String)"
            },
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 149,
            "name": "I click on the the Save Button",
            "match": {
              "location": "Generic_Steps.iClickTheOnTheSaveButton()"
            },
            "keyword": "And "
          },
          {
            "result": {
              "status": "skipped"
            },
            "line": 150,
            "name": "Verify the respective Records for current status should be Payment complete",
            "match": {
              "arguments": [
                {
                  "val": "Payment complete",
                  "offset": 59
                }
              ],
              "location": "Generic_Steps.verifyTheRespectiveRecordsInSignOnForApproval(String)"
            },
            "keyword": "Then "
          }
        ],
        "tags": [
          {
            "name": "@NPSFinanceTestCases"
          },
          {
            "name": "@TC003_APVendor"
          },
          {
            "name": "#done"
          }
        ]
      }
    ],
    "name": "Vendor Master Data covers the raise request and process the request to complete.",
    "description": "",
    "id": "vendor-master-data-covers-the-raise-request-and-process-the-request-to-complete.",
    "keyword": "Feature",
    "uri": "C:/GitProject/NPSFinanceApplication/NPSFinanceApplication/src/test/resources/features/VendorMasterData.feature",
    "tags": [
      {
        "name": "@NPSFinanceTestCases",
        "type": "Tag",
        "location": {
          "line": 1,
          "column": 1
        }
      }
    ]
  }
]